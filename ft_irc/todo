
Commandes restantes:
    sever class:
    - definir le mot de pass pour pouvoir se co au serveur - done
    - parsing de PASS dans la class server - done
    - je pense - parsing de QUIT dans la class server - need la fonction pour send to all chans
    - parsing de LIST dans le server pour savoir tous les diffrents noms de channels class server

    other class:
    - parsing de PART 
    - parsing de MODE
    - parsing de KICK
    - parsing de TOPIC
    - parsing de NAMES ( bon la commande fonctionne toute seule)
    - parsing de WHOIS

    flag a gerer pour MODE:
        <nom du canal> on doit renvoyer les flag actif du canal. (renvoi toujours ca apres la creation du canal)
       -i +i : Le canal devient sur invitation uniquement.
       -t +t : Restreint la modification du topic aux opérateurs de canal.
       -k +k : Définit ou supprime une clé (mot de passe) pour accéder au canal.
       -o +o : Donne ou retire les privilèges d'opérateur de canal à un utilisateur.
       -l +l : Définit ou supprime la limite maximale d'utilisateurs pouvant rejoindre le canal.


creation des channels quand on fait JOIN

gestion des mdp quand on veut join plusieurs channel:
/join #canal1,#canal2 motdepasse1,motdepasse2

/join #canal mdp = va envoyer #canal mdp
/join #canal mdp #canal2 = va recevoir que #canal mdp
/join #canal #canal4 #canal3 = ne va recevoir que #canal et #canal4
            ( donc ici limiter a 2 canal max )
On doit setup la commande WHOIS qui genere les erreurs quand on essaye de se co a plusieurs sur un channel


variable signal en haut de server.cpp:
    - A voir si on ne peut pas l'init dans le constructeur de server(): _signal(false)

jai change le vector de client en "_clients_array" 
pour plus de lisibilite quand on traitera que 1 client avec une variable "client"


commande pour se connecter directement a irssi avec les infos que lon veut

irssi -c 127.0.0.1 -p <port> -w <password> -n <nickname>

irssi -c localhost -p 6667 -w pass -n azbk